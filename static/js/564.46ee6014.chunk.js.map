{"version":3,"file":"static/js/564.46ee6014.chunk.js","mappings":"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","sources":["webpack://my-app-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app-1/./src/components/Profile/My posts/MyPosts.module.css?16f6","webpack://my-app-1/./src/components/Profile/My posts/Post/Post.module.css?6083","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__yh9g6\",\"avatar\":\"ProfileInfo_avatar__qOZM5\",\"name\":\"ProfileInfo_name__rvoTu\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'My status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || 'My status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                           onBlur={ deactivateEditMode } value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nlet avatar = 'http://sun9-20.userapi.com/sun9-86/s/v1/if1/JygeoxXgnUnZyoLLCmkqMUik_vLWURO7Vpdjv_rdMKiR07AtdZ39-6kT-CCry5TKae7FwrV0.jpg?size=200x200&quality=96&crop=0,0,600,600&ava=1';\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={classes.content}>\r\n            <div>\r\n                <img className={classes.avatar} src={props.profile.photos.large || avatar} alt=\"avatar\"/>\r\n                <p className={classes.name}>{props.profile.fullName}</p>\r\n                <p>{props.profile.aboutMe}</p>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__pIU79\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__depK4\",\"message\":\"Post_message__VtYXL\"};","import classes from './Post.module.css';\r\n\r\nlet avatar = 'https://sun1.ufanet.userapi.com/s/v1/ig2/DDlHTZiRFwT5iQx5OD38NeNrcb-5FY3tvGe5vSv5b6ZpzXSg588-xS70zUNZInCA_4wpILdQz6-4kGbgkn74Hzfs.jpg?size=200x200&quality=96&crop=10,15,2133,2133&ava=1'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={avatar} alt=\"ava\"/>\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                {props.likes}\r\n                <span> &#x2764;</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = [...props.postsData]\r\n        .reverse()\r\n        .map(post => <Post message={post.message} likes={post.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} placeholder='Enter your post'\r\n                   name='newPostText' validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'profileAddPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {addPost, getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","classes","src","photos","large","alt","fullName","aboutMe","Preloader","message","likes","maxLength10","maxLengthCreator","MyPosts","postsElements","postsData","reverse","map","post","likesCount","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","connect","state","profilePage","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}